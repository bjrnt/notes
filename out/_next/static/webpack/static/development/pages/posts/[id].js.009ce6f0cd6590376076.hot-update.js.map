{"version":3,"file":"static/webpack/static/development/pages/posts/[id].js.009ce6f0cd6590376076.hot-update.js","sources":["webpack:///./pages/posts/.tsx"],"sourcesContent":["import Layout from \"../../components/layout\";\nimport { getAllPostIds, getPostData } from \"../../lib/posts\";\nimport { GetStaticPaths, GetStaticProps } from \"next\";\nimport unified from \"unified\";\nimport * as React from \"react\";\nimport remark2rehype from \"remark-rehype\";\nimport rehype2react from \"rehype-react\";\nimport markdown from \"remark-parse\";\nimport footnotes from \"remark-footnotes\";\nimport numberedFootnotes from \"remark-numbered-footnotes\";\nimport { MarkdownLink } from \"../../components/markdown-link\";\nimport Link from \"next/link\";\nimport { Post as PostData } from \"../../lib/post\";\nimport styles from \"./markdown.module.css\";\n\nconst markdownProcessor = unified()\n  .use(markdown)\n  .use(footnotes, { inlineNotes: true })\n  .use(numberedFootnotes)\n  .use(remark2rehype)\n  .use(rehype2react, {\n    createElement: React.createElement,\n    components: {\n      a: MarkdownLink,\n      img: Image,\n      sup: Reference,\n    },\n  });\n\nexport default function Post({ post }: { post: PostData }) {\n  return (\n    <Layout>\n      <div className={styles.container}>\n        {(markdownProcessor.processSync(post.contents) as any).result}\n      </div>\n      <br />\n      {post.inboundLinks.length > 0 && (\n        <InboundLinks links={post.inboundLinks} />\n      )}\n    </Layout>\n  );\n}\n\nfunction Image({ src, ...rest }) {\n  const modifiedSrc = `/${src.slice(2)}`;\n  return <img src={modifiedSrc} {...rest} />;\n}\n\nfunction Reference(props) {\n  if (!props.id.match(/fnref-[0-9]+/)) {\n    return <sup {...props} />;\n  }\n  console.log(props);\n  const { children, ...rest } = props;\n  return <sup {...rest}>[{children}]</sup>;\n}\n\nfunction InboundLinks({ links }) {\n  return (\n    <div className=\"bg-gray-200 p-3 rounded-lg\">\n      <h5 className=\"mt-0 text-gray-500 leading-tight mb-2\">Inbound Links</h5>\n      <div className=\"flex flex-wrap\">\n        {links.map((link) => (\n          <Link href=\"/posts/[id]\" as={`/posts/${link.id}`} key={link.id}>\n            <button className=\"w-1/2 h-32 text-left p-2 opacity-50 hover:opacity-75 hover:bg-gray-400 rounded-md text-sm flex flex-col\">\n              <strong>{link.title}</strong>\n              <div className=\"overflow-y-auto text-gray-700\">\n                {(markdownProcessor.processSync(link.context) as any).result}\n              </div>\n            </button>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  const paths = await getAllPostIds();\n  return {\n    paths: paths.map((path) => `/posts/${path}`),\n    fallback: false,\n  };\n};\n\nexport const getStaticProps: GetStaticProps = async ({ params }) => {\n  const post = await getPostData(params.id.toString());\n  return {\n    props: {\n      post,\n    },\n  };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAHA;AAFA;;AASA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AALA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAaA;;;;A","sourceRoot":""}